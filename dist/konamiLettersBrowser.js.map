{"version":3,"sources":["webpack:///webpack/bootstrap ac9b116a88e2c661ba9f?bc0a","webpack:///./src/konamiLettersBrowser.js","webpack:///./src/letterArranger.js?efd4","webpack:///./src/keyTracker.js?8ead","webpack:///./src/patterns/happy_face.js?1455"],"names":[],"mappings":"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","file":"konamiLettersBrowser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ac9b116a88e2c661ba9f\n **/","\"use strict\";\n\n\nvar letterArranger = require('./letterArranger');\nvar keyTracker = require('./keyTracker');\nvar happy_face = require('./patterns/happy_face');\n\n\n/**\n * a function that calls the letter arranger, defaults to the konami code as the key array and the happy face as the\n * pattern.\n * @param keyArr <array> an array of key character codes\n * @param pattern <array> an object describing the pattern to draw\n * @param callback <function> executes on completion synchronously\n */\nwindow.konamiLetters = function (keyArr, pattern, callback) {\n    pattern = pattern || happy_face;\n    keyTracker(keyArr, function () {\n        letterArranger(pattern);\n        if (callback instanceof Function) {\n            callback();\n        }\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/konamiLettersBrowser.js\n **/","\"use strict\";\n\n/**\n * Takes an array of line objects. Each line must have an upper and lower bound (for x OR y) and a function that\n * describes the relationship between x and y.\n *\n * Here are some examples of line configurations:\n *      [{\n *          xLower : -10,\n *          xUpper : 10,\n *          equation : function (x) { return x + 1}\n *      }, {\n *          yLower : -20,\n *          yUpper : 20,\n *          equation : function (x) { return x + 1}\n *      }];\n *\n * Note* A line configuration cannot have both x and y boundaries (ie. xLower and xUpper, or yLower and yUpper)\n *\n * Using the public methods of the letter arranger, you will be able to re-arrange all the letters on the page to match\n * the lines you describe.\n *\n * @param pattern <array>\n */\n\n\nlet lines; // a reference to the pattern passed to the entry function.\nlet letters = []; // References to all of the wrapped letters on the page, and all the text nodes on the page:\nconst textNodes = [];\nlet letterNum = null; // The number of letters on the page:\nlet interval = null; // an interval for updating the color which can be stopped.\nlet bodyHeight = null; // The width and height of the body document that you are dealing with.\nlet bodyWidth = null;\nlet totalLettersUsed = 0; // The total letters assigned to a line:\nlet assignmentOffset = 0; // Place holder used to iterate over all the letters on the page.\n\n// Generate a new random RGB color.\nconst newNum = () => {\n    return Math.floor(Math.random() * 256);\n};\nconst _newColor = function() {\n    const color = 'rgb('+ newNum()  +','+ newNum() +','+ newNum() +')';\n    return color;\n};\n\n\n/**\n * Evaluate each of the passed in line descriptions, and prepare the document to be ... played with.\n * @private\n */\nconst _init = function() {\n    let totalRange = 0;\n\n    for (let n=0; n < lines.length; n++) {\n        const line = lines[n];\n\n        // First get the range of the line based on either the x or y boundaries:\n        if (line.hasOwnProperty('xLower') && line.hasOwnProperty('xUpper')) {\n            line.range = line.xUpper - line.xLower;\n        } else if (line.hasOwnProperty('yLower') && line.hasOwnProperty('yUpper')) {\n            line.range = line.yUpper - line.yLower;\n\n            // If the line has no bounds, then throw an error.\n        } else {\n            throw new Error('You must include either x or y boundaries for each line configuration passed');\n        }\n\n        // Add a plot attribute to each line:\n        lines[n].plot = [];\n\n        // Add up the total range of all of the lines\n        // used later on to figure out how many letters assigned to each line.\n        // It's a crude solution that doesn't account for curvature in the lines, but the length or width of each\n        // line is taken into account along the x or y access. This means lines straight up or across will have\n        // proportionally more letters assigned to them.\n        totalRange += lines[n].range;\n    }\n\n    // Wrap all the letters in a span tag and get the returned list.\n    letters = _wrapLetters();\n\n    // Set the x y default position of each of the letters.\n    // Remove stylesheets and Add base styling to make this all possible:\n    _prepDocument();\n\n    letterNum = letters.length;\n\n    // For each line, figure out how many letters should be assigned to that line:\n    for (let i=0; i < lines.length; i++) {\n        const linea = lines[i];\n\n        // The lines number of letters is the ratio of the lines range by the total range of all lines passed,\n        // multiplied by the total number of letters in the document.\n        linea.numLetters = Math.floor(letterNum * (linea.range / totalRange));\n        totalLettersUsed += linea.numLetters;\n    }\n\n    // Note * Since we are using Math.floor to calculate the numLetters - sometimes there will be a small remainder.\n    // Check for this case and adjust:\n    if (letterNum !== totalLettersUsed) {\n\n        // Add the remainder letters to the last line:\n        lines[lines.length - 1].numLetters += (letterNum - totalLettersUsed);\n        totalLettersUsed += (letterNum - totalLettersUsed);\n    }\n\n    // Now that we have assigned all the letters to one line or another, figure out the interval for each line,\n    // and create a plot for each line.\n    for (let j=0; j< lines.length; j++) {\n        const lineb = lines[j];\n\n        // Find the interval of each line based on the number of letters divided by the range:\n        lineb.interval = lineb.range / lineb.numLetters;\n\n        // For each function, invoke it for it's specified range along the specified interval:\n        _createPlot(lineb);\n    }\n\n    return this;\n};\n\nconst _setStyleString = str => {\n    const style = $('<style type=\"text/css\">'+ str +'</style>');\n    $('html > head').append(style);\n};\n\n/**\n * Preps the document to be manipulated. Removes all stylesheets and adds some base styling:\n * @private\n */\n    // TODO !!! THIS DOES NOT WORK THE WAY I WANT IT TO AT ALL!!!!!!\n    // IT SHOULD WRAP THE DIVS, NOT REMOVE THEM THEN REPLACE THEM, AND USE RELATIVE POSITIONING.\nconst _prepDocument = function() {\n    console.log('yee haw!')\n    const motionStyle = '.nerp {' +\n        'position: absolute;' +\n        'transition: top 20s, left 20s, font-size 20s;' +\n        'transform: translate3d(0,0,0); }';\n\n    // for each letter, set the top and left position\n    $('.nerp').each(function(){\n        const position = $(this).offset();\n        $(this).css({left : position.left + 'px', top : position.top + 'px'});\n    });\n\n    // next apply a motion style transform,\n    _setStyleString(motionStyle);\n\n    // Now select all of the .nerp elements on the page, and remove them temporarily:\n    const $nerps = $('.nerp').detach();\n\n    // remove everything from the body (including stylesheets), then re-attach the nerps.\n    $('body').empty();\n    $('body').append($nerps);\n    $('link').remove();\n\n    // set a transition for visibility on all div elements\n    //_setStyleString('div { transition: visibility: 5s;}');// can't figure out why this used to be here ...\n    bodyWidth = document.getElementsByTagName('body')[0].offsetWidth;\n    bodyHeight = document.getElementsByTagName('body')[0].offsetHeight;\n\n};\n\n\n/**\n * Wrap each of the letters on the page in a span tag, and return a DOM reference to the letters on the page.\n * @private\n */\nconst _wrapLetters = function() {\n    _getTextNodes(document.getElementsByTagName('body')[0]);\n\n    for (let i=0; i<textNodes.length; i++){\n        const textArr = textNodes[i].nodeValue.split('');\n        const parentElement = textNodes[i].parentElement;\n\n        parentElement.removeChild(textNodes[i]);\n        for (let x=0; x<textArr.length; x++) {\n\n            // Do a double check here for empty string text nodes (do not use the empty strings in between\n            // other full strings):\n            if (textArr[x] !== ' ') {\n                const newSpan = document.createElement('span');\n\n                newSpan.setAttribute('class', 'nerp');\n\n                newSpan.appendChild( document.createTextNode(textArr[x]) );\n                parentElement.appendChild( newSpan, textArr[x]);\n            }\n        }\n    }\n\n    return document.getElementsByClassName('nerp');\n};\n\n\n/**\n * Via StackOverflow.\n * User:\n * http://stackoverflow.com/users/515502/rahat-ahmed\n */\nconst _getTextNodes = function(element) {\n\n    // Don't recurse into scripts, kill 'em.\n    if (element.tagName === 'SCRIPT') {\n        element.remove();\n    } else {\n        if (element.childNodes.length > 0) {\n            for (let i = 0; i < element.childNodes.length; i++) {\n                _getTextNodes(element.childNodes[i]);\n            }\n        }\n\n        if (element.nodeType === Node.TEXT_NODE && element.nodeValue.trim() != '') {\n            textNodes.push(element);\n        }\n    }\n};\n\n/**\n * Creates the (x,y) coordinates for each of the letters in a given line based on the passed line configurations,\n * and the leg work done above.\n * Assigns the (x,y) coordinates to the letters allotted to the given line.\n * @param line\n * @private\n */\nconst _createPlot = function(line) {\n    const numLetters = line.numLetters;\n    const interval = line.interval;\n    const lower = line.hasOwnProperty('xLower') ? line.xLower : line.yLower;\n    const equation = line.equation;\n\n    // Now plot the points on the line based on the lower bound and the interval:\n    for (let x = 0; x < numLetters; x++) {\n\n        const x1 = lower + (x * interval);\n        const y = equation(x1);\n        // now find the coordinates relative to the width of the document, expecting that 0 is the midline of the\n        // document on both the x and y axis\n        const relativeX = x1 + (bodyWidth / 2);\n        const relativeY = y + (bodyHeight / 2);\n\n        const coordinates = [relativeX,relativeY];\n        line.plot.push(coordinates);\n\n        // use assignmentOffset so your place is held as _createPlot gets called on subsequent lines\n        letters[assignmentOffset].plotPoint = coordinates;\n        assignmentOffset++;\n    }\n};\n\n\n/**\n * Stop the dance.\n */\nconst stop = function() {\n    clearInterval(interval);\n};\n\n/**\n * Start moving the letters on the page according to CSS transitions, then according to an interval which will\n * flash all the letters different colors.\n */\nconst startMoving = function() {\n\n    for (let i=0; i < letters.length; i++) {\n        const letter = letters[i];\n        letter.style.left = letter.plotPoint[0] + 'px';\n        letter.style.top = letter.plotPoint[1] + 'px';\n        letter.style.fontSize = '20px';\n    }\n\n    // Increase the font size (this is a transition as stated above which is why it's done in a subsequent loop)\n    for (let j=0; j < letters.length; j++) {\n        letters[j].style.fontSize = '100px';\n    }\n\n    // Set an interval to flash a different color every half second.\n    interval = setInterval(function(){\n\n        for (let k = 0; k < letters.length; k++) {\n            letters[k].style.color = _newColor();\n        }\n\n    }, 5000); // TODO !!! determine whether 5 seconds is the proper timeout.\n\n};\n\n\n\nmodule.exports = function (pattern) {\n    if (!pattern) {\n        throw new Error('You cannot use the LetterArranger without an an array of objects describing the pattern.');\n    }\n    lines = pattern;\n    _init();\n    startMoving();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/letterArranger.js\n **/","\"use strict\";\n\n// Key array defaults to the konami code :\nconst defaultSeries = [38,38,40,40,37,39,37,39,66,65];\n// An array of the keys pressed (to listen for the konami code):\nlet keysPressed = [];\nlet currIndex = 0;\n\nconst keyTracker = (keyArray, callback) => {\n    document.onkeydown = function(e) {\n        const key = e.which;\n        keyArray = keyArray || defaultSeries;\n\n        if (keyArray[currIndex] === key) {\n            // If the key pressed was the next in the series, push it to the array of pressed letters :\n            keysPressed.push(key);\n            currIndex+=1;\n\n        } else {\n            // if the key pressed does not match the current, then start over :\n            keysPressed = [];\n            currIndex = 0;\n            if (keyArray[0] === key) {\n                keysPressed.push(key);\n                currIndex+=1;\n            }\n        }\n\n        // Now test for a complete match:\n        if (keysPressed.length === keyArray.length) { callback(); }\n    };\n};\n\nmodule.exports = keyTracker;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/keyTracker.js\n **/","\"use strict\";\n\nvar happy_face = [\n    // this one is the smile\n    {\n        xLower : -250,\n        xUpper : 250,\n        equation : function(x) {\n            x = parseInt(x);\n            var y = Math.sqrt(62500 - (x * x));\n            return y;\n        }\n\n    // The top and bottom of the left eye\n    }, {\n        xLower : -215,\n        xUpper : -185,\n        equation : function(x) {\n            x = parseInt(x);\n            var y = Math.sqrt(225 - Math.pow((x + 200), 2)) - 200;\n            return y;\n        }\n    }, {\n        xLower : -215,\n        xUpper : -185,\n        equation : function(x) {\n            x = parseInt(x);\n            var y = -1 * Math.sqrt(225 - Math.pow((x + 200), 2)) - 200;\n            return y;\n        }\n\n    // The top and bottom of the RIGHT eye\n    }, {\n        xLower : 185,\n        xUpper : 215,\n        equation : function(x) {\n            x = parseInt(x);\n            var y = Math.sqrt(225 - Math.pow((x - 200), 2)) - 200;\n            return y;\n        }\n    }, {\n        xLower : 185,\n        xUpper : 215,\n        equation : function(x) {\n            x = parseInt(x);\n            var y = -1 * Math.sqrt(225 - Math.pow((x - 200), 2)) - 200;\n            return y;\n        }\n    }\n];\n\nmodule.exports = happy_face;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/patterns/happy_face.js\n **/"],"sourceRoot":""}